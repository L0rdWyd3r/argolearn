apiVersion: v1
kind: Secret
metadata:
  name: {{ include "proxysql.fullname" . }}
type: Opaque
stringData:
  proxysql.conf: |
    datadir="/datadir"
    errorlog="/var/lib/proxysql/proxysql.log"

    admin_variables=
    {
        admin_credentials="admin:admin;{{ .Values.cluster_username }}:{{ .Values.cluster_password }}"
        mysql_ifaces="0.0.0.0:6032"
        cluster_username="{{ .Values.cluster_username }}"
        cluster_password="{{ .Values.cluster_password }}"
        cluster_check_interval_ms=200
        cluster_check_status_frequency=100
        cluster_mysql_query_rules_save_to_disk=true
        cluster_mysql_servers_save_to_disk=true
        cluster_mysql_users_save_to_disk=true
        cluster_proxysql_servers_save_to_disk=true
        cluster_mysql_query_rules_diffs_before_sync=3
        cluster_mysql_servers_diffs_before_sync=3
        cluster_mysql_users_diffs_before_sync=3
        cluster_proxysql_servers_diffs_before_sync=3
    }

    mysql_variables=
    {
        threads=4
        max_connections=2048
        default_query_delay=0
        default_query_timeout=36000000
        have_compress=true
        poll_timeout=2000
        interfaces="0.0.0.0:3306"
        default_schema="information_schema"
        stacksize=1048576
        server_version="5.5.30"
        connect_timeout_server=3000
        monitor_username="{{ .Values.monitor_username }}"
        monitor_password="{{ .Values.monitor_password }}"
        monitor_history=600000
        monitor_connect_interval=60000
        monitor_ping_interval=10000
        monitor_read_only_interval=1500
        monitor_read_only_timeout=500
        monitor_galera_healthcheck_interval=2000
        monitor_galera_healthcheck_timeout=800
        ping_interval_server_msec=120000
        ping_timeout_server=500
        commands_stats=true
        sessions_sort=true
        connect_retries_on_failure=10
        ssl_p2s_cert="/root/client-cert.pem"
        ssl_p2s_key="/root/client-key.pem"
        ssl_p2s_ca="/root/ca.pem"
    }

    mysql_galera_hostgroups =
    (
      {
          writer_hostgroup = 10
          backup_writer_hostgroup = 20
          reader_hostgroup = 30
          offline_hostgroup = 9999
          active = 1
          max_writers = 1
          writer_is_also_reader = 1
          max_transactions_behind = 100
      }
    )

    mysql_users =
    (
      {{- $totalUsers := (len .Values.proxysql.mysql.users) -}}
      {{- range $index, $element := .Values.proxysql.mysql.users }}
      {
        username="{{ required "mysql username is required!" $element.username }}"
        password="{{ required "mysql passowrd is required!" $element.password }}"
        use_ssl=0
        default_hostgroup={{ (add1 (int $element.readOnly | default 9)) }}
        transaction_persistent=1
        active=1
        max_connections={{ $element.maxConnections | default 10000 }}
      }{{- if lt (add1 $index) $totalUsers -}},{{- end -}}
      {{- end }}
    )

    mysql_servers =
    (
      {{- $totalServers := (len .Values.proxysql.mysql.servers) -}}
      {{- range $index, $element := .Values.proxysql.mysql.servers }}
      {
        hostgroup_id={{- if or $element.isWriter (kindIs "invalid" $element.isWriter) }}10{{- else }}1{{- end }}
        hostname="{{ required "mysql server's hostname is required!" $element.hostname }}"
        port={{ $element.port | default 3306 }}
        use_ssl=1
      }{{- if lt (add1 $index) $totalServers -}},{{- end -}}
      {{- end }}
    )
      
    mysql_query_rules =
    (
        {
            rule_id=100
            active=1
            match_pattern="^SELECT .* FOR UPDATE"
            destination_hostgroup=10
            apply=1
        },
        {
            rule_id=200
            active=1
            match_pattern="^SELECT .*"
            destination_hostgroup=30
            apply=1
        },
        {
            rule_id=300
            active=1
            match_pattern=".*"
            destination_hostgroup=10
            apply=1
        }
    )

    proxysql_servers =
    ({{ range $i, $e := until (int .Values.replicaCount) }}
    {
    hostname="{{ include "proxysql.fullname" $ }}-announce-{{ $i }}"
    port=6032
    weight=0
    comment="announce-{{ $i }}"
    },{{ end }}
    )

